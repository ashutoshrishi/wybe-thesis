@article{lpvm2015,
  author    = {Graeme Gange and
               Jorge A. Navas and
               Peter Schachte and
               Harald S{\o}ndergaard and
               Peter J. Stuckey},
  title     = {Horn Clauses as an Intermediate Representation for Program Analysis
               and Transformation},
  journal   = {CoRR},
  volume    = {abs/1507.05762},
  year      = {2015}
}

@inproceedings{alpernSSA,
 author = {Alpern, B. and Wegman, M. N. and Zadeck, F. K.},
 title = {Detecting Equality of Variables in Programs},
 booktitle = {Proceedings of the 15th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '88},
 year = {1988},
 isbn = {0-89791-252-7},
 location = {San Diego, California, USA},
 pages = {1--11},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/73560.73561},
 doi = {10.1145/73560.73561},
 acmid = {73561},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{cytronSSA,
 author = {Cytron, Ron and Ferrante, Jeanne and Rosen, Barry K. and Wegman, Mark N. and Zadeck, F. Kenneth},
 title = {Efficiently Computing Static Single Assignment Form and the Control Dependence Graph},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {Oct. 1991},
 volume = {13},
 number = {4},
 month = oct,
 year = {1991},
 issn = {0164-0925},
 pages = {451--490},
 numpages = {40},
 url = {http://doi.acm.org/10.1145/115372.115320},
 doi = {10.1145/115372.115320},
 acmid = {115320},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {control dependence, control flow graph, def-use chain, dominator, optimizing compilers},
} 

% Gated Single Assignment (GSA)
@article{gsa,
 author = {Ottenstein, Karl J. and Ballancel, Robert A. and MacCabe, Arthur B.},
 title = {The Program Dependence Web: A Representation Supporting Control-, Data-, and Demand-driven Interpretation of Imperative Languages},
 journal = {SIGPLAN Not.},
 issue_date = {Jun. 1990},
 volume = {25},
 number = {6},
 month = jun,
 year = {1990},
 issn = {0362-1340},
 pages = {257--271},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/93548.93578},
 doi = {10.1145/93548.93578},
 acmid = {93578},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{ssi,
Abstract = {by C. Scott Ananian. / Thesis (S.M.)--Massachusetts Institute of Technology, Dept. of Electrical Engineering and Computer Science, 2001. / Includes bibliographical references (p. 89-94).},
Author = {Ananian, C. Scott (Clifford Scott), 1976-},
Keywords = {Electrical Engineering and Computer Science.},
Title = {The static single information form.},
URL = {https://ezp.lib.unimelb.edu.au/login?url=https://search-ebscohost-com.ezp.lib.unimelb.edu.au/login.aspx?direct=true&db=edsndl&AN=edsndl.oai.union.ndltd.org.MIT.oai.dspace.mit.edu.1721.1.86578&site=eds-live&scope=site},
Year = {2001},
}

% SSA is functional programming
@article{appelfp,
 author = {Appel, Andrew W.},
 title = {SSA is Functional Programming},
 journal = {SIGPLAN Not.},
 issue_date = {April 1998},
 volume = {33},
 number = {4},
 month = apr,
 year = {1998},
 issn = {0362-1340},
 pages = {17--20},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/278283.278285},
 doi = {10.1145/278283.278285},
 acmid = {278285},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

% C++ incremental compiler
@article{cpp_compiler,
Abstract = {The authors propose an effective incremental compilation environment called “Barbados,” which is based on the C++ language. The environment is similar to an interpreter in that alterations to source code appear to be immediately reflected in all object code, except that errors are reported early as in compiled systems. The system is significantly faster than traditional environments at bringing applications up-to-date after minor modifications. It is also simpler, more general, and more efficient than competing incremental compilation systems.},
Author = {Cooper, Tim and Wise, Michael},
ISSN = {00380644},
Journal = {Software: Practice and Experience},
Keywords = {Software configuration management, Source code (Computer science), Compilers (Computer programs), Incremental compilers, Object codes},
Pages = {497 - 517},
Title = {Achieving incremental compilation through fine-grained builds.},
Volume = {27},
URL = {https://ezp.lib.unimelb.edu.au/login?url=https://search-ebscohost-com.ezp.lib.unimelb.edu.au/login.aspx?direct=true&db=aci&AN=500444231&site=eds-live&scope=site},
Year = {1997},
}

% LLVM Thesis
@MastersThesis{Lattner:MSThesis02,
    author  = {Chris Lattner},
    title   = "{LLVM: An Infrastructure for Multi-Stage Optimization}",
    school  = "{Computer Science Dept., University of Illinois at Urbana-Champaign}",
    year    = {2002},
    address = {Urbana, IL},
    month   = {Dec},
    note    = {{\em See {\tt http://llvm.cs.uiuc.edu}.}}
}


% Note on dragonbook IR
@misc{irnote,
  title = {Note on Intermediate Representation},
  howpublished = {\url{http://dragonbook.stanford.edu/lecture-notes/Stanford-CS143/16-Intermediate-Rep.pdf}},
  author = {Maggie Johnson},  
  year = {2008},
  month = {July},
  note = {Lecture Handout on the DragonBook}
}


%make 
@article{make,
Author = {Feldman, S. I.},
ISSN = {00380644},
Journal = {Software: Practice \& Experience},
Keywords = {Computer software, File organization (Computer science), COMPUTER programs, FILE organization (computer science)},
Pages = {255 - 265},
Title = {Make.},
Volume = {9},
URL = {https://ezp.lib.unimelb.edu.au/login?url=https://search-ebscohost-com.ezp.lib.unimelb.edu.au/login.aspx?direct=true&db=aci&AN=517168435&site=eds-live&scope=site},
Year = {1979},
}

% smart recompilation with contexts
@article{tichy_recomp_context,
 author = {Tichy, Walter F.},
 title = {Smart Recompilation},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {July 1986},
 volume = {8},
 number = {3},
 month = jun,
 year = {1986},
 issn = {0164-0925},
 pages = {273--291},
 numpages = {19},
 url = {http://doi.acm.org.ezp.lib.unimelb.edu.au/10.1145/5956.5959},
 doi = {10.1145/5956.5959},
 acmid = {5959},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{smarter_recompilation,
 author = {Schwanke, Robert W. and Kaiser, Gail E.},
 title = {Smarter Recompilation},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {Oct. 1988},
 volume = {10},
 number = {4},
 month = oct,
 year = {1988},
 issn = {0164-0925},
 pages = {627--632},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/48022.214505},
 doi = {10.1145/48022.214505},
 acmid = {214505},
 publisher = {ACM},
 address = {New York, NY, USA},
} 


@article{cost_of_recompilation,
 author = {Adams, Rolf and Tichy, Walter and Weinert, Annette},
 title = {The Cost of Selective Recompilation and Environment Processing},
 journal = {ACM Trans. Softw. Eng. Methodol.},
 issue_date = {Jan. 1994},
 volume = {3},
 number = {1},
 month = jan,
 year = {1994},
 issn = {1049-331X},
 pages = {3--28},
 numpages = {26},
 url = {http://doi.acm.org/10.1145/174634.174637},
 doi = {10.1145/174634.174637},
 acmid = {174637},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {empirical analysis, environment processing, selective recompilation, separate compilation, smart recompilation, software evolution},
} 


% Boehm GC
@article{boehmgc,
  title={The boehm-demers-weiser conservative garbage collector},
  author={Boehm, Hans-J},
  journal={HP Labs},
  year={2004}
}


@misc{mir,
  title = {Introducing MIR},
  howpublished = {\url{http://blog.rust-lang.org/2016/04/19/MIR.html}},
  author = {Niko Matsakis},  
  year = 2016,
  month = {April},
  note = {The Rust Programming Language Blog}
}

@misc{sil,
  title = {Swift Intermediate Language},
  howpublished = {\url{http://blog.rust-lang.org/2016/04/19/MIR.html}},
  author = {Joe Groff and Chris Lattner},  
  year = 2015,
  month = {October},
  note = {A high level IR to complement LLVM}
}
